#!/usr/bin/bash

# Pull picasso code with specified repo and branch, update the embedded
# submodules, and create a clean work tree

list_only=no

PARAMS=""
while [ $# -gt 0 ]; do
    case "$1" in
        -l|--list)
            list_only=yes
            shift
            ;;
        -h|--help)
            echo Usage: `basename $0` repo branch work-dir
            echo Example: `basename $0` E355 E355-release-2.0 fix-foo-bug
            shift
            exit 0
            ;;
        -*|--*)
            echo "unsuported flag $1" >&2
            exit 1
            ;;
        *)
            PARAMS="$PARAMS $1"
            shift
            ;;
    esac
done
eval set -- "$PARAMS"

GIT_URL_ROOT="ssh://git-agent/picasso-git-mirror"

repo=$1
branch=$2
work_dir=$3

if [ -z "$repo" ]; then
    echo repo name missed
    exit 1
fi

repo_path=${GIT_URL_ROOT}/${repo}.git

if [ "$list_only" = "yes" ]; then
    git ls-remote -h ${repo_path}
    exit 0
fi

if [ -z "$branch" ] || [ -z "$work_dir" ]; then
    echo insufficient arguments
    exit 1
fi

if [ -f "$work_dir" ]; then
    echo "$work_dir already existed"
    exit 1
fi

git clone -b $branch ${repo_path} "$work_dir"

cd "$work_dir"
git submodule init
sed -i 's/gerrit-eu.landisgyr.net/git-agent\/picasso-git-mirror/g' .git/config
git submodule update

cd Platform
git submodule init
sed -i 's/gerrit-eu.landisgyr.net/git-agent\/picasso-git-mirror/g' \
    ../.git/modules/Platform/config
git submodule update

cd ..
git remote add gerrit-eu \
    ssh://gerrit-eu.landisgyr.net/Picasso_Products.git

picasso-fix-names # fix filename issues in Platform folder

if [ ! -f .git/hooks/commit-msg ]; then
    cat << EOF > .git/hooks/commit-msg
#!/bin/sh
# From Gerrit Code Review 3.2.1
#
# Part of Gerrit Code Review (https://www.gerritcodereview.com/)
#
# Copyright (C) 2009 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# avoid [[ which is not POSIX sh.
if test "$#" != 1 ; then
  echo "$0 requires an argument."
  exit 1
fi

if test ! -f "$1" ; then
  echo "file does not exist: $1"
  exit 1
fi

# Do not create a change id if requested
if test "false" = "`git config --bool --get gerrit.createChangeId`" ; then
  exit 0
fi

# $RANDOM will be undefined if not using bash, so don't use set -u
random=$( (whoami ; hostname ; date; cat $1 ; echo $RANDOM) | git hash-object --stdin)
dest="$1.tmp.${random}"

trap 'rm -f "${dest}"' EXIT

if ! git stripspace --strip-comments < "$1" > "${dest}" ; then
   echo "cannot strip comments from $1"
   exit 1
fi

if test ! -s "${dest}" ; then
  echo "file is empty: $1"
  exit 1
fi

# Avoid the --in-place option which only appeared in Git 2.8
# Avoid the --if-exists option which only appeared in Git 2.15
if ! git -c trailer.ifexists=doNothing interpret-trailers \
      --trailer "Change-Id: I${random}" < "$1" > "${dest}" ; then
  echo "cannot insert change-id line in $1"
  exit 1
fi

if ! mv "${dest}" "$1" ; then
  echo "cannot mv ${dest} to $1"
  exit 1
fi
EOF
    chmod a+x .git/hooks/commit-msg
fi
