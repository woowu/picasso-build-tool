#!/bin/bash

config=debug
target=
mcu=
do_clean=no
do_pull=no
pull_with_del=no
pull_dir=
extra_scons_opts=
n_parallel=`nproc`
ci_build=""
local_build=
hwopt=
deploy_dir=~/picasso-firmware-builds/local
copy_only=no
python_name=Python39

n_parallel=$((n_parallel - 2))
if [ $n_parallel -lt 1 ]; then
    n_parallel=1
fi
if [ $n_parallel -gt 12 ]; then
    n_parallel=12
fi

PARAMS=""
while [ $# -gt 0 ]; do
    case "$1" in
        -t|--target)
            target=$2
            shift
            shift
            ;;
        -c|--config)
            config=$2
            shift
            shift
            ;;
        -m|--mcu)
            extra_scons_opts+=" --mcu="$2
            shift
            shift
            ;;
        -x|--clean)
            do_clean=yes
            shift
            ;;
        -p|--pull)
            do_pull=yes
            shift
            ;;
        --pull-dir)
            pull_dir=$2
            shift
            shift
            ;;
        -d|--delete)
            pull_with_del=yes
            shift
            ;;
        -i|--ci-build)
            ci_build="--ci-build"
            shift
            ;;
        --local)
            local_build="--local-build"
            shift
            ;;
        -k)
            extra_scons_opts+=" --fupKey=Development"
            shift
            ;;
        -z)
            extra_scons_opts+=" --compression-algo=LZSS"
            shift
            ;;
        -l)
            extra_scons_opts+=" --printLogByUart"
            shift
            ;;
        -W|--swap-opto)
            extra_scons_opts+=" --swap-opto"
            shift
            ;;
        -e|--extra)
            extra_scons_opts+=" $2"
            shift
            shift
            ;;
        --copy-only)
            copy_only=yes
            shift
            ;;
        -j)
            n_parallel=$2
            shift
            shift
            ;;
        -P|--python)
            # Example: Python39 (default), Python37
            python_name=$2
            shift
            shift
            ;;
        -*|--*)
            echo "unsuported flag $1" >&2
            exit 1
            ;;
        *)
            PARAMS="$PARAMS $1"
            shift
            ;;
    esac
done
eval set -- "$PARAMS"

if [ -z "$target" ]; then
    echo "no target specified"
    exit 1
fi

function copy_artifacts () {
    if [ -z deploy_dir ]; then
        exit
    fi

    echo Copying artifacts

    # Two rooms in each hour
    #
    #time=`date +%Y%m%dT%H%M`
    #m=${time: -2}
    #head=${time:0:11}
    #if [ $m -ge 30 ]; then
    #    timestamp=${head}"30"
    #else
    #    timestamp=${head}"00"
    #fi

    timestamp=`date +%Y%m%dT%H0000`

    dst_dir=${deploy_dir}/${target}/${config}/${timestamp}
    mkdir -p ${dst_dir}

    cp Product/7_EXE/${target}/System/_out/${config}/System.out ${dst_dir}/
    cp Product/7_EXE/${target}/System/_out/${config}/SystemUnpatched.map ${dst_dir}/
    cp Product/7_EXE/${target}/Module1/_out/${config}/Module1.out ${dst_dir}/
    cp Product/7_EXE/${target}/Module1/_out/${config}/Module1Unpatched.map ${dst_dir}/
    cp Product/7_EXE/${target}/Module2/_out/${config}/Module2.out ${dst_dir}/
    cp Product/7_EXE/${target}/Module2/_out/${config}/Module2Unpatched.map ${dst_dir}/
    cp Product/7_EXE/${target}/Module3/_out/${config}/Module3.out ${dst_dir}/
    cp Product/7_EXE/${target}/Module3/_out/${config}/Module3Unpatched.map ${dst_dir}/
    cp Product/7_EXE/${target}/BootLoader/_out/${config}/BootLoader.out ${dst_dir}/
    cp Product/7_EXE/${target}/BootLoader/_out/${config}/BootLoaderUnpatched.map ${dst_dir}/
}

function build () {
    if [ "$do_clean" = "yes" ]; then
        picasso-clean
        picasso-fix-perm
    fi

    echo "start building at `date`" | tee /tmp/picasso-build.log
    if [ "$do_pull" = "yes" ]; then
        pull_opts=""
        if [ "$pull_with_del" = "yes" ]; then
            pull_opts+=" -d"
        fi
        if [ -n "$pull_dir" ]; then
            pull_opts+=" ${pull_dir}"
        fi
        picasso-pull ${pull_opts} | grep "^.f" 2>&1 | tee -a /tmp/picasso-build.log
    fi

    if grep -q "3Ph" <<< $target ; then
        hwopt="--e360hw3ph=4" 
    else
        hwopt="--e360hw=4" 
    fi

    echo /c/$python_name/Scripts/scons \
        -u -j${n_parallel} \
        $local_build \
        config=$config \
        $ci_build --debug=time \
        target=$target ${hwopt} \
        ${extra_scons_opts}
    /c/$python_name/Scripts/scons \
        -u -j${n_parallel} \
        $local_build \
        config=$config \
        $ci_build --debug=time \
        target=$target ${hwopt} \
        ${extra_scons_opts} 2>&1 \
        | tee -a /tmp/picasso-build.log

    end_time=`date`
    echo "end building at ${end_time}" | tee -a /tmp/picasso-build.log

    logfile=${target}.${config}.log
    sed 's/^M$//' /tmp/picasso-build.log > ${logfile}

    if grep "building terminated because of errors" ${logfile} >/dev/null ; then
        return 1
    fi
    return 0
}

if [ "$copy_only" = "yes" ]; then
    copy_artifacts
    exit 0;
fi
if build ; then
    copy_artifacts
fi

echo done
